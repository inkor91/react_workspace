컴포넌트?

- 컴포넌트?앨리먼트?DOM?
DOM: 논리 트리
컴포넌트: 앨리먼트의 집합
앨리먼트: 요소
useState -> 상태값을 관리해주는 훅

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

컴포넌트 사이드 이펙트 다루기

사이드 이펙트 = 부작용
의도하지 않은 효과 vs 부수 효과

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

커스텀 훅 만들기 

반복되기 기능 
찍어내기/반복
=> 함수화

useState/ useEffect를 반복
=> 커스텀 훅

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

hook flow 이해하기

hook flow -> hook들의 호출 타이밍
useState -> setState시 prev이 주입

useEffect -> render가 끝난 뒤
update시 -> useEffect clean up/ useEffect
dependecny array -> 전달받은 값의 변화 있는 경우에만

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

리액트 Element에 스타일 입히기

className -> 문자열
style -> 객체, 카멜케이스, className 보다 먼저 

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Ref로 DOM 다루기 

Input Element까 있고 화면이 뜨자마자 focus를 주고 싶다면?
?.focus();

vanila js -> document.get~/document.query~
React -> useRef/ref

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

Form 다루기

onSubmit -> event.preventDefault()
event.target.elements -> console.dir(element)

validation 
value

validation -> onChange 
controlled -> input의 value를 직접 관리 

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Error 다루기

Error Boundary -> Catch Error해서 보여주기
Fallback -> Error가 났을 떄 보여줄 컴포넌트

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
key와 리렌더링

key-value 

DBM Dictionary, Json, Object...

Key는 Value를 특정하는 이름

재사용 -> key를 제대로 줘야 제사용 가능
제대로 준다-> 중복없고, 바뀌지 않는

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

상태 끌어올리기 

형제 컴포넌트의 상태 궁금 -> 필요하면 부모로 lifting up 
Props drilling -> 과도한 lifting은 drilling을 야기